[{"path":"https://rmariadb.r-dbi.org/dev/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://rmariadb.r-dbi.org/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to RMariaDB","title":"Contributing to RMariaDB","text":"outlines propose change RMariaDB.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to RMariaDB","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to RMariaDB","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to RMariaDB","text":"recommend create Git branch pull request (PR). Look Travis AppVeyor build status making changes. README contain badges continuous integration services used package. use roxygen2, Markdown syntax, documentation. use testthat. Contributions test cases included easier accept. Please update NEWS.md.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to RMariaDB","text":"Please note RMariaDB project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 RMariaDB authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kirill Müller. Author, maintainer. Jeroen Ooms. Author. David James. Author. Saikat DebRoy. Author. Hadley Wickham. Author. Jeffrey Horner. Author. R Consortium. Funder. . Copyright holder.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Müller K, Ooms J, James D, DebRoy S, Wickham H, Horner J (2024). RMariaDB: Database Interface MariaDB Driver. R package version 1.3.2.9009, https://github.com/r-dbi/RMariaDB, https://downloads.mariadb.org/connector-c/, https://rmariadb.r-dbi.org.","code":"@Manual{,   title = {RMariaDB: Database Interface and MariaDB Driver},   author = {Kirill Müller and Jeroen Ooms and David James and Saikat DebRoy and Hadley Wickham and Jeffrey Horner},   year = {2024},   note = {R package version 1.3.2.9009, https://github.com/r-dbi/RMariaDB,     https://downloads.mariadb.org/connector-c/},   url = {https://rmariadb.r-dbi.org}, }"},{"path":"https://rmariadb.r-dbi.org/dev/index.html","id":"rmariadb","dir":"","previous_headings":"","what":"Database Interface and MariaDB Driver","title":"Database Interface and MariaDB Driver","text":"RMariaDB database interface MariaDB driver R. version aimed full compliance DBI specification, replacement old RMySQL package.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/index.html","id":"hello-world","dir":"","previous_headings":"","what":"Hello World","title":"Database Interface and MariaDB Driver","text":"","code":"library(DBI) # Connect to my-db as defined in ~/.my.cnf con <- dbConnect(RMariaDB::MariaDB(), group = \"my-db\")  dbListTables(con) dbWriteTable(con, \"mtcars\", mtcars) dbListTables(con)  dbListFields(con, \"mtcars\") dbReadTable(con, \"mtcars\")  # You can fetch all results: res <- dbSendQuery(con, \"SELECT * FROM mtcars WHERE cyl = 4\") dbFetch(res) dbClearResult(res)  # Or a chunk at a time res <- dbSendQuery(con, \"SELECT * FROM mtcars WHERE cyl = 4\") while(!dbHasCompleted(res)){   chunk <- dbFetch(res, n = 5)   print(nrow(chunk)) } # Clear the result dbClearResult(res)  # Disconnect from the database dbDisconnect(con)"},{"path":"https://rmariadb.r-dbi.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Database Interface and MariaDB Driver","text":"Binary packages OS X Windows can installed directly CRAN: development version github: Discussions associated DBI related database packages take place R-SIG-DB. website Databases using R describes tools best practices ecosystem. Installation source Linux OS X currently requires MariaDB Connector/C, preferably version 2.3.4/3.0.3 later. older versions, character blob columns work reliably. Alternatively, Oracle’s libmysqlclient can used.","code":"install.packages(\"RMariaDB\") # install.packages(\"devtools\") devtools::install_github(\"r-dbi/DBI\") devtools::install_github(\"r-dbi/RMariaDB\")"},{"path":"https://rmariadb.r-dbi.org/dev/index.html","id":"connectorc","dir":"","previous_headings":"Installation","what":"Connector/C","title":"Database Interface and MariaDB Driver","text":"recent Debian Ubuntu install libmariadb-dev. Fedora, CentOS RHEL need mariadb-devel: OS X use mariadb-connector-c Homebrew:","code":"sudo apt-get install -y libmariadb-dev sudo yum install mariadb-devel brew install mariadb-connector-c"},{"path":"https://rmariadb.r-dbi.org/dev/index.html","id":"mysql-client-library","dir":"","previous_headings":"Installation","what":"MySQL client library","title":"Database Interface and MariaDB Driver","text":"recent Debian Ubuntu install libmysqlclient-dev. Fedora, CentOS RHEL need mysql-devel, see https://apps.fedoraproject.org/packages/mysql-devel: Follow instructions enable MySQL yum repository command attempts install MariaDB files. OS X use mysql-connector-c Homebrew:","code":"sudo apt-get install -y libmysqlclient-dev sudo yum install mysql-devel brew install mysql-connector-c++"},{"path":"https://rmariadb.r-dbi.org/dev/index.html","id":"mariadb-configuration-file","dir":"","previous_headings":"","what":"MariaDB configuration file","title":"Database Interface and MariaDB Driver","text":"Instead specifying username password calls dbConnect(), ’s better set MariaDB configuration file names databases connect commonly. file live ~/..cnf look like: want run examples, ’ll need set proper options [rs-dbi] group MariaDB option file, /etc/.cnf ..cnf file home directory. default single user install MariaDB, following code work:","code":"[database_name] option1=value1 option2=value2 [rs-dbi] database=\"test\" user=\"root\" password=\"\""},{"path":"https://rmariadb.r-dbi.org/dev/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Database Interface and MariaDB Driver","text":"Many thanks Christoph M. Friedrich, John Heuer, Kurt Hornik, Torsten Hothorn, Saikat Debroy, Matthew Kelly, Brian D. Ripley, Mikhail Kondrin, Jake Luciani, Jens Nieschulze, Deepayan Sarkar, Louis Springer, Duncan Temple Lang, Luis Torgo, Arend P. van der Veen, Felix Weninger, J. T. Lindgren, Crespin Miller, Michal Okonlewski, Seth Falcon Paul Gilbert comments, suggestions, bug reports, patches original RMySQL package, contributors (code discussions) package. Please note ‘RMariaDB’ project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/Client-flags.html","id":null,"dir":"Reference","previous_headings":"","what":"Client flags — Client-flags","title":"Client flags — Client-flags","text":"Use client.flag argument DBI::dbConnect(), multiple flags can combined + bitwOr(). flags provided completeness. enforce SSL DB connection, add flag CLIENT_SSL.","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/reference/Client-flags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Client flags — Client-flags","text":"","code":"if (FALSE) { # \\dontrun{ library(DBI) library(RMariaDB) con1 <- dbConnect(MariaDB(), client.flag = CLIENT_COMPRESS) con2 <- dbConnect(   MariaDB(),   client.flag = bitwOr(CLIENT_COMPRESS, CLIENT_SSL) ) } # }"},{"path":"https://rmariadb.r-dbi.org/dev/reference/MariaDBConnection-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class MariaDBConnection. — MariaDBConnection-class","title":"Class MariaDBConnection. — MariaDBConnection-class","text":"\"MariaDBConnection\" objects usually created DBI::dbConnect(). represent connection MariaDB MySQL database.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/MariaDBConnection-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class MariaDBConnection. — MariaDBConnection-class","text":"","code":"# S3 method for class 'MariaDBConnection' format(x, ...)  # S4 method for class 'MariaDBConnection' dbDisconnect(conn, ...)  # S4 method for class 'MariaDBConnection' dbGetInfo(dbObj, what = \"\", ...)  # S4 method for class 'MariaDBConnection' dbIsValid(dbObj, ...)  # S4 method for class 'MariaDBConnection' show(object)"},{"path":"https://rmariadb.r-dbi.org/dev/reference/MariaDBConnection-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class MariaDBConnection. — MariaDBConnection-class","text":"\"MySQLConnection\" class subclass \"MariaDBConnection\". Objects class created dbConnect(MariaDB(), ..., mysql = TRUE) indicate server MySQL server. RMariaDB package supports MariaDB MySQL servers, SQL dialect details vary. default detect server type based version number. older RMySQL package also implements \"MySQLConnection\" class. S4 system able distinguish RMariaDB RMySQL objects even packages loaded.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/MariaDBDriver-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class MariaDBDriver with constructor MariaDB. — MariaDBDriver-class","title":"Class MariaDBDriver with constructor MariaDB. — MariaDBDriver-class","text":"MariaDB driver implementing R database (DBI) API. class always initialized MariaDB() function. returns singleton allows connect MariaDB.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/MariaDBDriver-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class MariaDBDriver with constructor MariaDB. — MariaDBDriver-class","text":"","code":"# S4 method for class 'MariaDBDriver' dbGetInfo(dbObj, ...)  # S4 method for class 'MariaDBDriver' dbIsValid(dbObj, ...)  # S4 method for class 'MariaDBDriver' dbUnloadDriver(drv, ...)"},{"path":"https://rmariadb.r-dbi.org/dev/reference/MariaDBResult-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class MariaDBResult — MariaDBResult-class","title":"Class MariaDBResult — MariaDBResult-class","text":"MariaDB's query results class.  classes encapsulates result SQL query statement.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/MariaDBResult-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class MariaDBResult — MariaDBResult-class","text":"","code":"# S4 method for class 'MariaDBResult' dbIsValid(dbObj, ...)"},{"path":"https://rmariadb.r-dbi.org/dev/reference/RMariaDB-package.html","id":null,"dir":"Reference","previous_headings":"","what":"RMariaDB: Database Interface and MariaDB Driver — RMariaDB-package","title":"RMariaDB: Database Interface and MariaDB Driver — RMariaDB-package","text":"Implements DBI-compliant interface MariaDB (https://mariadb.org/) MySQL (https://www.mysql.com/) databases.","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/reference/RMariaDB-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"RMariaDB: Database Interface and MariaDB Driver — RMariaDB-package","text":"Maintainer: Kirill Müller kirill@cynkra.com (ORCID) Authors: Jeroen Ooms (ORCID) David James Saikat DebRoy Hadley Wickham Jeffrey Horner contributors: R Consortium [funder] RStudio [copyright holder]","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/dbConnect-MariaDBDriver-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect/disconnect to a MariaDB DBMS — MariaDB","title":"Connect/disconnect to a MariaDB DBMS — MariaDB","text":"methods straight-forward implementations corresponding generic functions.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/dbConnect-MariaDBDriver-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect/disconnect to a MariaDB DBMS — MariaDB","text":"","code":"MariaDB()  # S4 method for class 'MariaDBDriver' dbConnect(   drv,   dbname = NULL,   username = NULL,   password = NULL,   host = NULL,   unix.socket = NULL,   port = 0,   client.flag = 0,   group = \"rs-dbi\",   default.file = NULL,   ssl.key = NULL,   ssl.cert = NULL,   ssl.ca = NULL,   ssl.capath = NULL,   ssl.cipher = NULL,   ...,   groups = NULL,   load_data_local_infile = FALSE,   bigint = c(\"integer64\", \"integer\", \"numeric\", \"character\"),   timeout = 10,   timezone = \"+00:00\",   timezone_out = NULL,   reconnect = FALSE,   mysql = NULL )"},{"path":"https://rmariadb.r-dbi.org/dev/reference/dbConnect-MariaDBDriver-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect/disconnect to a MariaDB DBMS — MariaDB","text":"drv object class MariaDBDriver MariaDBConnection. dbname string database name NULL. NULL, connection sets default database value. username, password Username password. username omitted, defaults current user. password omitted, users without password can log . host string identifying host machine running MariaDB server NULL. NULL string \"localhost\", connection local host assumed. unix.socket (optional) string unix socket named pipe. port (optional) integer TCP/IP default port. client.flag (optional) integer setting various MariaDB client flags, see Client-flags details. group string identifying section default.file use setting authentication parameters (see MariaDB()). default.file string filename MariaDB client options, relevant groups given. default value depends operating system (see references), Linux OS X files ~/..cnf ~/.mylogin.cnf used. Expanded normalizePath(). ssl.key (optional) string filename SSL key file use. Expanded normalizePath(). ssl.cert (optional) string filename SSL certificate use. Expanded normalizePath(). ssl.ca (optional) string filename SSL certificate authority file use. Expanded normalizePath(). ssl.capath (optional) string path directory containing trusted SSL CA certificates PEM format. Expanded normalizePath(). ssl.cipher (optional) string list permitted ciphers use SSL encryption. ... Unused, needed compatibility generic. groups deprecated, use group instead. load_data_local_infile Set TRUE use LOAD DATA LOCAL INFILE DBI::dbWriteTable() DBI::dbAppendTable() default. capability disabled default server side recent versions MySQL Server. bigint R type 64-bit integer types mapped , default bit64::integer64, allows full range 64 bit integers. timeout Connection timeout, seconds. Use Inf negative value timeout. timezone (optional) time zone connection, default corresponds UTC. Set argument server database configured different time zone UTC. Set NULL automatically determine server time zone. timezone_out time zone returned R. default use value timezone argument, \"+00:00\" converted \"UTC\" want display datetime values local timezone, set Sys.timezone() \"\". setting change time values returned, display. reconnect (experimental) Set TRUE use MYSQL_OPT_RECONNECT enable automatic reconnection. experimental dangerous connection lost middle transaction. mysql Set TRUE/FALSE connect MySQL server MariaDB server, respectively. RMariaDB package supports MariaDB MySQL servers, SQL dialect details vary. default assume MariaDB version >= 10.0.0, MySQL otherwise.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/dbConnect-MariaDBDriver-method.html","id":"time-zones","dir":"Reference","previous_headings":"","what":"Time zones","title":"Connect/disconnect to a MariaDB DBMS — MariaDB","text":"MySQL MariaDB support named time zones, must installed server. See https://dev.mysql.com/doc/mysql-g11n-excerpt/8.0/en/time-zone-support.html details. Without installation, time zone support restricted UTC offset, take account DST offsets.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/dbConnect-MariaDBDriver-method.html","id":"secure-passwords","dir":"Reference","previous_headings":"","what":"Secure passwords","title":"Connect/disconnect to a MariaDB DBMS — MariaDB","text":"Avoid storing passwords hard-coded code, use e.g. keyring package store retrieve passwords secure way. MySQL client library (MariaDB) supports .mylogin.cnf file can passed default.file argument. file can contain obfuscated password, secure way store passwords may acceptable user aware restrictions. availability feature depends client library used compiling RMariaDB package. Windows macOS binaries CRAN compiled MariaDB Connector/C client library support feature.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/dbConnect-MariaDBDriver-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Connect/disconnect to a MariaDB DBMS — MariaDB","text":"Configuration files: https://mariadb.com/kb/en/library/configuring-mariadb--mycnf/","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/reference/dbDataType.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the SQL Data Type of an S object — dbDataType","title":"Determine the SQL Data Type of an S object — dbDataType","text":"method straight-forward implementation corresponding generic function.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/dbDataType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the SQL Data Type of an S object — dbDataType","text":"","code":"# S4 method for class 'MariaDBConnection' dbDataType(dbObj, obj, ...)  # S4 method for class 'MariaDBDriver' dbDataType(dbObj, obj, ...)"},{"path":"https://rmariadb.r-dbi.org/dev/reference/dbDataType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the SQL Data Type of an S object — dbDataType","text":"dbObj MariaDBDriver MariaDBConnection object. obj R/S-Plus object whose SQL type want determine. ... parameters individual methods may need.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/dbDataType.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the SQL Data Type of an S object — dbDataType","text":"","code":"dbDataType(RMariaDB::MariaDB(), \"a\") #> [1] \"VARCHAR(1)\" dbDataType(RMariaDB::MariaDB(), 1:3) #> [1] \"INTEGER\" dbDataType(RMariaDB::MariaDB(), 2.5) #> [1] \"DOUBLE\""},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadb-quoting.html","id":null,"dir":"Reference","previous_headings":"","what":"Quote MariaDB strings and identifiers. — mariadb-quoting","title":"Quote MariaDB strings and identifiers. — mariadb-quoting","text":"MariaDB, identifiers enclosed backticks, e.g. `x`.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadb-quoting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quote MariaDB strings and identifiers. — mariadb-quoting","text":"","code":"# S4 method for class 'MariaDBConnection,Id' dbQuoteIdentifier(conn, x, ...)  # S4 method for class 'MariaDBConnection,SQL' dbQuoteIdentifier(conn, x, ...)  # S4 method for class 'MariaDBConnection,character' dbQuoteIdentifier(conn, x, ...)  # S4 method for class 'MariaDBConnection' dbQuoteLiteral(conn, x, ...)  # S4 method for class 'MariaDBConnection,SQL' dbQuoteString(conn, x, ...)  # S4 method for class 'MariaDBConnection,character' dbQuoteString(conn, x, ...)  # S4 method for class 'MariaDBConnection,SQL' dbUnquoteIdentifier(conn, x, ...)"},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadb-quoting.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quote MariaDB strings and identifiers. — mariadb-quoting","text":"","code":"if (mariadbHasDefault()) {   con <- dbConnect(RMariaDB::MariaDB())   dbQuoteIdentifier(con, c(\"a b\", \"a`b\"))   dbQuoteString(con, c(\"a b\", \"a'b\"))   dbDisconnect(con) }"},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadb-tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write MariaDB tables. — mariadb-tables","title":"Read and write MariaDB tables. — mariadb-tables","text":"methods read write entire tables MariaDB database.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadb-tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write MariaDB tables. — mariadb-tables","text":"","code":"# S4 method for class 'MariaDBConnection' dbAppendTable(conn, name, value, ..., row.names = NULL)  # S4 method for class 'MariaDBConnection,character' dbExistsTable(conn, name, ...)  # S4 method for class 'MariaDBConnection' dbListObjects(conn, prefix = NULL, ...)  # S4 method for class 'MariaDBConnection' dbListTables(conn, ...)  # S4 method for class 'MariaDBConnection,character' dbReadTable(conn, name, ..., row.names = FALSE, check.names = TRUE)  # S4 method for class 'MariaDBConnection,character' dbRemoveTable(conn, name, ..., temporary = FALSE, fail_if_missing = TRUE)  # S4 method for class 'MariaDBConnection,character,character' dbWriteTable(   conn,   name,   value,   field.types = NULL,   overwrite = FALSE,   append = FALSE,   header = TRUE,   row.names = FALSE,   nrows = 50,   sep = \",\",   eol = \"\\n\",   skip = 0,   quote = \"\\\"\",   temporary = FALSE,   ... )  # S4 method for class 'MariaDBConnection,character,data.frame' dbWriteTable(   conn,   name,   value,   field.types = NULL,   row.names = FALSE,   overwrite = FALSE,   append = FALSE,   ...,   temporary = FALSE )"},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadb-tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write MariaDB tables. — mariadb-tables","text":"conn MariaDBConnection object, produced DBI::dbConnect() name character string specifying table name. value data frame. ... Unused, needed compatibility generic. row.names Either TRUE, FALSE, NA string. TRUE, always translate row names column called \"row_names\". FALSE, never translate row names. NA, translate rownames character vector. string equivalent TRUE, allows override default name. backward compatibility, NULL equivalent FALSE. prefix fully qualified path database's namespace, NULL. argument processed dbUnquoteIdentifier(). given method return objects accessible prefix. check.names TRUE, default, column names converted valid R identifiers. temporary TRUE, creates temporary table expires connection closed. dbRemoveTable(), temporary tables considered argument set TRUE. fail_if_missing FALSE, dbRemoveTable() succeeds table exist. field.types Optional, overrides default choices field types, derived classes columns data frame. overwrite logical specifying whether overwrite existing table . default FALSE. append logical specifying whether append existing table DBMS.  appending, table (temporary table) must exist, otherwise error reported. default FALSE. header logical, input file header line? Default heuristic used read.table(), .e., TRUE first line one fewer column second line. nrows number lines rows import using read.table input file create proper table definition. Default 50. sep field separator character eol End--line separator skip number lines skip reading data input file. quote quote character used input file (defaults \\\".)","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadb-tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and write MariaDB tables. — mariadb-tables","text":"data.frame case dbReadTable(); otherwise logical indicating whether operation successful.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadb-tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read and write MariaDB tables. — mariadb-tables","text":"using load_data_local_infile = TRUE DBI::dbConnect(), pass safe = FALSE dbAppendTable() avoid transactions. LOAD DATA INFILE used internally, means rows violating primary key constraints now silently ignored.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadb-tables.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Read and write MariaDB tables. — mariadb-tables","text":"data.frame returned dbReadTable() primitive data, e.g., coerce character data factors. Temporary tables ignored dbExistsTable() dbListTables() due limitations underlying C API. reason, prior existence check performed creating regular persistent table; attempt create temporary table already existing name fail message database driver.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadb-tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and write MariaDB tables. — mariadb-tables","text":"","code":"if (mariadbHasDefault()) {   con <- dbConnect(RMariaDB::MariaDB(), dbname = \"test\")    # By default, row names are written in a column to row_names, and   # automatically read back into the row.names()   dbWriteTable(con, \"mtcars\", mtcars[1:5, ], temporary = TRUE)   dbReadTable(con, \"mtcars\")   dbReadTable(con, \"mtcars\", row.names = FALSE) } #>    mpg cyl disp  hp drat    wt  qsec vs am gear carb #> 1 21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> 2 21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> 3 22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> 4 21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> 5 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2"},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadbClientLibraryVersions.html","id":null,"dir":"Reference","previous_headings":"","what":"MariaDB Check for Compiled Versus Loaded Client Library Versions — mariadbClientLibraryVersions","title":"MariaDB Check for Compiled Versus Loaded Client Library Versions — mariadbClientLibraryVersions","text":"function prints compiled loaded client library versions.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadbClientLibraryVersions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MariaDB Check for Compiled Versus Loaded Client Library Versions — mariadbClientLibraryVersions","text":"","code":"mariadbClientLibraryVersions()"},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadbClientLibraryVersions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MariaDB Check for Compiled Versus Loaded Client Library Versions — mariadbClientLibraryVersions","text":"named integer vector length two, first element representing compiled library version second element representing loaded client library version.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadbClientLibraryVersions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MariaDB Check for Compiled Versus Loaded Client Library Versions — mariadbClientLibraryVersions","text":"","code":"mariadbClientLibraryVersions() #> 8.0.39 8.0.39  #>  80039  80039"},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadbHasDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if default database is available. — mariadbHasDefault","title":"Check if default database is available. — mariadbHasDefault","text":"RMariaDB examples tests connect database defined rs-dbi group ~/..cnf. function checks database available, , displays informative message. mariadbDefault() works similarly throws testthat skip condition failure, making suitable use tests.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadbHasDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if default database is available. — mariadbHasDefault","text":"","code":"mariadbHasDefault()  mariadbDefault()"},{"path":"https://rmariadb.r-dbi.org/dev/reference/mariadbHasDefault.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if default database is available. — mariadbHasDefault","text":"","code":"if (mariadbHasDefault()) {   db <- dbConnect(RMariaDB::MariaDB(), dbname = \"test\")   dbListTables(db)   dbDisconnect(db) }"},{"path":"https://rmariadb.r-dbi.org/dev/reference/query.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a SQL statement on a database connection. — query","title":"Execute a SQL statement on a database connection. — query","text":"retrieve results chunk time, use DBI::dbSendQuery(), DBI::dbFetch(), DBI::dbClearResult(). Alternatively, want results (fit memory) use DBI::dbGetQuery() sends, fetches clears . data manipulation queries (.e. queries return data, UPDATE, DELETE, etc.), DBI::dbSendStatement() serves counterpart DBI::dbSendQuery(), DBI::dbExecute() corresponds DBI::dbGetQuery().","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a SQL statement on a database connection. — query","text":"","code":"# S4 method for class 'MariaDBResult' dbBind(res, params, ...)  # S4 method for class 'MariaDBResult' dbClearResult(res, ...)  # S4 method for class 'MariaDBResult' dbFetch(res, n = -1, ..., row.names = FALSE)  # S4 method for class 'MariaDBResult' dbGetStatement(res, ...)  # S4 method for class 'MariaDBConnection,character' dbSendQuery(conn, statement, params = NULL, ..., immediate = FALSE)  # S4 method for class 'MariaDBConnection,character' dbSendStatement(conn, statement, params = NULL, ..., immediate = FALSE)"},{"path":"https://rmariadb.r-dbi.org/dev/reference/query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a SQL statement on a database connection. — query","text":"res MariaDBResult object. params list query parameters substituted parameterised query. ... Unused. Needed compatibility generic. n Number rows retrieve. Use -1 retrieve rows. row.names Either TRUE, FALSE, NA string. TRUE, always translate row names column called \"row_names\". FALSE, never translate row names. NA, translate rownames character vector. string equivalent TRUE, allows override default name. backward compatibility, NULL equivalent FALSE. conn MariaDBConnection object. statement character vector length one specifying SQL statement executed.  single SQL statement provided. immediate TRUE, uses mysql_real_query() API instead mysql_stmt_init(). allows passing multiple statements (CLIENT_MULTI_STATEMENTS) turns ability pass parameters.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute a SQL statement on a database connection. — query","text":"","code":"if (mariadbHasDefault()) {   con <- dbConnect(RMariaDB::MariaDB(), dbname = \"test\")   dbWriteTable(con, \"arrests\", datasets::USArrests, temporary = TRUE)    # Run query to get results as dataframe   dbGetQuery(con, \"SELECT * FROM arrests limit 3\")    # Send query to pull requests in batches   res <- dbSendQuery(con, \"SELECT * FROM arrests\")   data <- dbFetch(res, n = 2)   data   dbHasCompleted(res)    dbClearResult(res)   dbDisconnect(con) }"},{"path":"https://rmariadb.r-dbi.org/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. DBI Id","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/result-meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Database interface meta-data. — result-meta","title":"Database interface meta-data. — result-meta","text":"See documentation generics details.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/result-meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Database interface meta-data. — result-meta","text":"","code":"# S4 method for class 'MariaDBResult' dbColumnInfo(res, ...)  # S4 method for class 'MariaDBResult' dbGetRowCount(res, ...)  # S4 method for class 'MariaDBResult' dbGetRowsAffected(res, ...)  # S4 method for class 'MariaDBResult' dbHasCompleted(res, ...)"},{"path":"https://rmariadb.r-dbi.org/dev/reference/result-meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database interface meta-data. — result-meta","text":"res object class MariaDBResult ... Ignored. Needed compatibility generic","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/result-meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Database interface meta-data. — result-meta","text":"","code":"if (mariadbHasDefault()) {   con <- dbConnect(RMariaDB::MariaDB(), dbname = \"test\")   dbWriteTable(con, \"t1\", datasets::USArrests, temporary = TRUE)    rs <- dbSendQuery(con, \"SELECT * FROM t1 WHERE UrbanPop >= 80\")   rs    dbGetStatement(rs)   dbHasCompleted(rs)   dbColumnInfo(rs)    dbFetch(rs)   rs    dbClearResult(rs)   dbDisconnect(con) }"},{"path":"https://rmariadb.r-dbi.org/dev/reference/transactions.html","id":null,"dir":"Reference","previous_headings":"","what":"DBMS Transaction Management — transactions","title":"DBMS Transaction Management — transactions","text":"Commits roll backs current transaction MariaDB connection. Note MariaDB DDL statements (e.g. CREATE TABLE) rolled back.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/transactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DBMS Transaction Management — transactions","text":"","code":"# S4 method for class 'MariaDBConnection' dbBegin(conn, ...)  # S4 method for class 'MariaDBConnection' dbCommit(conn, ...)  # S4 method for class 'MariaDBConnection' dbRollback(conn, ...)"},{"path":"https://rmariadb.r-dbi.org/dev/reference/transactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DBMS Transaction Management — transactions","text":"conn MariaDBConnection object, produced DBI::dbConnect(). ... Unused.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/reference/transactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DBMS Transaction Management — transactions","text":"","code":"if (mariadbHasDefault()) {   con <- dbConnect(RMariaDB::MariaDB(), dbname = \"test\")   df <- data.frame(id = 1:5)    dbWriteTable(con, \"df\", df, temporary = TRUE)   dbBegin(con)   dbExecute(con, \"UPDATE df SET id = id * 10\")   dbGetQuery(con, \"SELECT id FROM df\")   dbRollback(con)    dbGetQuery(con, \"SELECT id FROM df\")    dbDisconnect(con) }"},{"path":"https://rmariadb.r-dbi.org/dev/security.html","id":null,"dir":"","previous_headings":"","what":"Process for reporting security vulnerabilities","title":"Process for reporting security vulnerabilities","text":"reporting security vulnerability, please e-mail package maintainer krlmlr+r@mailbox.org instructions. include confidential information e-mail.","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"continuous-integration-1-3-2-9009","dir":"Changelog","previous_headings":"","what":"Continuous integration","title":"RMariaDB 1.3.2.9009 (2024-08-31)","text":"Install local package pkgdown builds. Improve support protected branches fledge. Improve support protected branches, without fledge.","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"chore-1-3-2-9008","dir":"Changelog","previous_headings":"","what":"Chore","title":"RMariaDB 1.3.2.9008 (2024-08-17)","text":"Auto-update GitHub Actions. Run: https://github.com/r-dbi/RMariaDB/actions/runs/10425483372","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"continuous-integration-1-3-2-9008","dir":"Changelog","previous_headings":"","what":"Continuous integration","title":"RMariaDB 1.3.2.9008 (2024-08-17)","text":"Sync latest developments.","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"continuous-integration-1-3-2-9007","dir":"Changelog","previous_headings":"","what":"Continuous integration","title":"RMariaDB 1.3.2.9007 (2024-08-10)","text":"Use v2 instead master.","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"continuous-integration-1-3-2-9006","dir":"Changelog","previous_headings":"","what":"Continuous integration","title":"RMariaDB 1.3.2.9006 (2024-08-06)","text":"Inline action.","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"chore-1-3-2-9005","dir":"Changelog","previous_headings":"","what":"Chore","title":"RMariaDB 1.3.2.9005 (2024-08-02)","text":"Auto-update GitHub Actions. Run: https://github.com/r-dbi/RMariaDB/actions/runs/10208511607","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"continuous-integration-1-3-2-9005","dir":"Changelog","previous_headings":"","what":"Continuous integration","title":"RMariaDB 1.3.2.9005 (2024-08-02)","text":"Use dev roxygen2 decor.","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"bug-fixes-1-3-2-9004","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"RMariaDB 1.3.2.9004 (2024-07-10)","text":"dbQuoteIdentifier() removes def catalog component , regression introduced RMariaDB 1.3.1 (#337, #339).","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"continuous-integration-1-3-2-9003","dir":"Changelog","previous_headings":"","what":"Continuous integration","title":"RMariaDB 1.3.2.9003 (2024-07-02)","text":"Fix Windows, tweak lock workflow.","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"chore-1-3-2-9002","dir":"Changelog","previous_headings":"","what":"Chore","title":"RMariaDB 1.3.2.9002 (2024-06-30)","text":"Auto-update GitHub Actions. Run: https://github.com/r-dbi/RMariaDB/actions/runs/9728433906","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"chore-1-3-2-9001","dir":"Changelog","previous_headings":"","what":"Chore","title":"RMariaDB 1.3.2.9001 (2024-06-28)","text":"Auto-update GitHub Actions. Run: https://github.com/r-dbi/RMariaDB/actions/runs/9692458109","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"continuous-integration-1-3-2-9001","dir":"Changelog","previous_headings":"","what":"Continuous integration","title":"RMariaDB 1.3.2.9001 (2024-06-28)","text":"Avoid checking bashisms Windows. Allow NOTEs R-devel. Better commit message. Bump versions, better default, consume custom matrix. Recent updates. Prepare dynamic check matrix.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"rmariadb-1329000-2024-05-26","dir":"Changelog","previous_headings":"","what":"RMariaDB 1.3.2.9000 (2024-05-26)","title":"RMariaDB 1.3.2.9000 (2024-05-26)","text":"Merge branch ‘cran-1.3.2’.","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"features-1-3-2","dir":"Changelog","previous_headings":"","what":"Features","title":"RMariaDB 1.3.2 (2024-05-26)","text":"Improve enforcement SSL dbConnect() output printing connections (@d-hansen, #328). Breaking change: Avoid appending numeric suffix duplicate column names (#321, #327). Breaking change: Deprecate dbConnect(groups = ) favor dbConnect(group = ), warning compatibility code (@rorynolan, #258).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"bug-fixes-1-3-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"RMariaDB 1.3.2 (2024-05-26)","text":"dbWriteTable() dbAppendTable() connection load_data_local_infile = TRUE uses utf8mb4 instead restricted utf8mb3 encoding (@ecoffingould, #332, #333). dbConnect() can enable SSL based client_flag (@d-hansen, #322). Fix dbQuoteIdentifier() Id() objects (#323).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"chore-1-3-2","dir":"Changelog","previous_headings":"","what":"Chore","title":"RMariaDB 1.3.2 (2024-05-26)","text":"Improve dbQuoteIdentifier() Id() objects (#324). Avoid deprecated mysql_ssl_set() (#319).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"continuous-integration-1-3-2","dir":"Changelog","previous_headings":"","what":"Continuous integration","title":"RMariaDB 1.3.2 (2024-05-26)","text":"Turn Windows now (#326).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"documentation-1-3-2","dir":"Changelog","previous_headings":"","what":"Documentation","title":"RMariaDB 1.3.2 (2024-05-26)","text":"Use dbitemplate (@maelle, #320).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"testing-1-3-2","dir":"Changelog","previous_headings":"","what":"Testing","title":"RMariaDB 1.3.2 (2024-05-26)","text":"Test quoting columns dbQuoteIdentifier() (@dpprdan, #254, #255).","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"features-1-3-1","dir":"Changelog","previous_headings":"","what":"Features","title":"RMariaDB 1.3.1 (2023-10-26)","text":"Support dbSendStatement(immediate = TRUE) dbExecute(immediate = TRUE), needs CLIENT_MULTI_STATEMENTS (#147, #312).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"bug-fixes-1-3-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"RMariaDB 1.3.1 (2023-10-26)","text":"Fix memory leak (#309, #311). Fix compilation CentOS 7 (#310). dbConnection(groups = ) works documented , regression introduced RMariaDB 1.3.0 (@pekkarr, #306).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"documentation-1-3-1","dir":"Changelog","previous_headings":"","what":"Documentation","title":"RMariaDB 1.3.1 (2023-10-26)","text":"Update docs client flags (#313).","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"features-1-3-0","dir":"Changelog","previous_headings":"","what":"Features","title":"RMariaDB 1.3.0 (2023-10-08)","text":"Connections now inherit \"MySQLConnection\" MySQL server detected (server version < 10.0 server description contains \"MariaDB\"). new mysql argument dbConnect() allows overriding autodetection (#303). Use string default JSON (#296) unknown column types (@LeeMendelowitz, #260). Support TIME columns subsecond precision (@renkun-ken, #288, #289).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"documentation-1-3-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"RMariaDB 1.3.0 (2023-10-08)","text":"Better MAX_NO_FIELD_TYPES error message.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"chore-1-3-0","dir":"Changelog","previous_headings":"","what":"Chore","title":"RMariaDB 1.3.0 (2023-10-08)","text":"Update Windows libs new location (#301). Replace Rcpp cpp11 (@Antonov548, #286). Add decor dependency.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"testing-1-3-0","dir":"Changelog","previous_headings":"","what":"Testing","title":"RMariaDB 1.3.0 (2023-10-08)","text":"Skip tests packages available (#304). Use testthat edition 3 (#285).","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"features-1-2-2","dir":"Changelog","previous_headings":"","what":"Features","title":"RMariaDB 1.2.2 (2022-06-19)","text":"dbAppendTable() accepts Id (#262, @renkun-ken). dbConnect() gains reconnect argument sets MYSQL_OPT_RECONNECT option (#261, @renkun-ken).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"bug-fixes-1-2-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"RMariaDB 1.2.2 (2022-06-19)","text":"Actually enable LOAD LOCAL INFILE setting MYSQL_OPT_LOCAL_INFILE flag (#265, #267).","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"features-1-2-1","dir":"Changelog","previous_headings":"","what":"Features","title":"RMariaDB 1.2.1 (2021-12-20)","text":"Upgrade mariadb-connector-c 3.2.5 Windows, built-support caching_sha2_password plugin (#134, #248, @jeroen).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"internal-1-2-1","dir":"Changelog","previous_headings":"","what":"Internal","title":"RMariaDB 1.2.1 (2021-12-20)","text":"Make method definition similar S3. setMethod() calls refer top-level functions (#250).","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"features-1-2-0","dir":"Changelog","previous_headings":"","what":"Features","title":"RMariaDB 1.2.0 (2021-12-12)","text":"BLOBs returned blob::blob() objects (#126, #243). dbWriteTable() dbAppendTable() much faster thanks LOAD DATA LOCAL INFILE. activate , load_data_local_infile = TRUE must passed dbConnect(). readr package required (#11, #223).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"bug-fixes-1-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"RMariaDB 1.2.0 (2021-12-12)","text":"Writing dates prior 1970 longer crashes Windows (#232, #245).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"internal-1-2-0","dir":"Changelog","previous_headings":"","what":"Internal","title":"RMariaDB 1.2.0 (2021-12-12)","text":"Add test reading writing JSON data type string (#127, #246). Update compatibility DBItest 1.7.2 (#228).","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"licensing-1-1-2","dir":"Changelog","previous_headings":"","what":"Licensing","title":"RMariaDB 1.1.2 (2021-09-06)","text":"RMariaDB now licensed MIT license (#213).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"features-1-1-2","dir":"Changelog","previous_headings":"","what":"Features","title":"RMariaDB 1.1.2 (2021-09-06)","text":"dbConnect() normalizes input paths (#197, @twentytitus). dbDataType() returns TIME(6) difftime, DATETIME(6) POSIXt columns, create columns microsecond precision default (#214).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"documentation-1-1-2","dir":"Changelog","previous_headings":"","what":"Documentation","title":"RMariaDB 1.1.2 (2021-09-06)","text":"Now referring libmariadb-dev Debian/Ubuntu package documentation configuration scripts (#219). ?dbConnect gains section secure passwords .mylogin.cnf file (#156).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"internal-1-1-2","dir":"Changelog","previous_headings":"","what":"Internal","title":"RMariaDB 1.1.2 (2021-09-06)","text":"Test MySQL MariaDB Server client libraries combinations GitHub Actions (#224). configure script now queries RMARIADB_FORCE_MARIADBCONFIG RMARIADB_FORCE_MYSQLCONFIG environment variables force use mariadb_config mysql_config, respectively (#218).","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"bug-fixes-1-1-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"RMariaDB 1.1.1 (2021-04-12)","text":"NULL mapped NA bit(1) columns (#201, @dirkschumacher).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"internal-1-1-1","dir":"Changelog","previous_headings":"","what":"Internal","title":"RMariaDB 1.1.1 (2021-04-12)","text":"Remove BH dependency inlining header files (#208).","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"features-1-1-0","dir":"Changelog","previous_headings":"","what":"Features","title":"RMariaDB 1.1.0 (2021-01-05)","text":"dbConnect() now supports timezone_out argument. Explicitly setting timezone NULL tries detect database time zone (#116). BIT(1) columns returned logical (#84). dbQuoteLiteral() now correctly quotes difftime values (#188).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"bug-fixes-1-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"RMariaDB 1.1.0 (2021-01-05)","text":"Timestamp values now written correctly database connection uses time zone UTC. Deviations still might occur DST boundaries, therefore still safer use UTC database connection (#116). Timestamp roundtrip longer fails Windows i386 (#117). dbBind() also works \"Date\" values stored integers (#187).","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"features-1-0-11","dir":"Changelog","previous_headings":"","what":"Features","title":"RMariaDB 1.0.11 (2020-12-16)","text":"Windows: update libmariadbclient 3.1.11 Add timezone argument dbConnect() (#184, @ycphs). dbWriteTable() dbBind() correctly interpret difftime values units \"secs\".","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"internal-1-0-11","dir":"Changelog","previous_headings":"","what":"Internal","title":"RMariaDB 1.0.11 (2020-12-16)","text":"./configure longer requires bash (@jeroen). Switch GitHub Actions (#185, thanks @ankane).","code":""},{"path":[]},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"features-1-0-10","dir":"Changelog","previous_headings":"","what":"Features","title":"RMariaDB 1.0.10 (2020-08-26)","text":"dbConnect() gains timeout argument, defaults 10. Use Inf negative value timeout (#169). Support fractional seconds datetime values reading writing (#157).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"bug-fixes-1-0-10","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"RMariaDB 1.0.10 (2020-08-26)","text":"dbDataType() returns VARCHAR(1) length-0 character vectors. dbDataType() returns VARCHAR() factors. dbSendQuery() dbSendStatement() clear result set dbBind() throws error. Check input dbWriteTable() data frame (#160, @rossholmberg).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"rmariadb-109-2020-07-03","dir":"Changelog","previous_headings":"","what":"RMariaDB 1.0.9 (2020-07-03)","title":"RMariaDB 1.0.9 (2020-07-03)","text":"Use VARCHAR data type string columns (#159). Encode column names UTF-8 (#109).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"rmariadb-108-2019-12-17","dir":"Changelog","previous_headings":"","what":"RMariaDB 1.0.8 (2019-12-17)","title":"RMariaDB 1.0.8 (2019-12-17)","text":"Implement dbGetInfo() according specification. Include information libssl-dev configure DESCRIPTION (#101).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"rmariadb-107-2019-12-02","dir":"Changelog","previous_headings":"","what":"RMariaDB 1.0.7 (2019-12-02)","title":"RMariaDB 1.0.7 (2019-12-02)","text":"Get rid auto_ptr, causes R CMD check warnings R-devel.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"rmariadb-106-2018-05-05","dir":"Changelog","previous_headings":"","what":"RMariaDB 1.0.6 (2018-05-05)","title":"RMariaDB 1.0.6 (2018-05-05)","text":"Add support bigint argument dbConnect(), supported values \"integer64\", \"integer\", \"numeric\" \"character\". Large integers returned values type (r-dbi/DBItest#133). Data frames resulting query always unique non-empty column names (r-dbi/DBItest#137). New arguments temporary fail_if_missing (default: TRUE) dbRemoveTable() (r-dbi/DBI#141, r-dbi/DBI#197). Using dbCreateTable() dbAppendTable() internally (r-dbi/DBI#74). Implement format() method MariaDBConnection (r-dbi/DBI#163). Reexporting Id(), DBI::dbIsReadOnly() DBI::dbCanConnect(). Now imports DBI 1.0.0.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"rmariadb-105-2018-04-02","dir":"Changelog","previous_headings":"","what":"RMariaDB 1.0.5 (2018-04-02)","title":"RMariaDB 1.0.5 (2018-04-02)","text":"dbGetException() longer reexported DBI. NaN Inf converted NULL writing database (#77). Values class \"integer64\" now supported dbWriteTable() dbBind() (#87). Schema support, specified DBI: dbListObjects(), dbUnquoteIdentifier() Id(). Names x argument dbQuoteIdentifier() preserved output (r-lib/DBI#173). Replace non-portable timegm() private implementation (#78). Update libmariadbclient version 2.3.5 Windows (#92, @jeroen).","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"rmariadb-10-4-2017-12-11","dir":"Changelog","previous_headings":"","what":"RMariaDB 1.0-4 (2017-12-11)","title":"RMariaDB 1.0-4 (2017-12-11)","text":"Attempt fix Solaris builds redefining timegm symbol macro sun defined. Fix examples running CRAN using temporary tables overwrite = TRUE. Refactor connection result handling similar backends. Add support R 3.1, DBI >= 0.5 required (#68). Queries bypass prepared statement framework (like SHOW PLUGINS) return data (#70, @nbenn). temporary table can created via dbWriteTable() table name exists. temporary table name exists, error raised database , condition checked beforehand.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"rmariadb-10-2-2017-10-01","dir":"Changelog","previous_headings":"","what":"RMariaDB 1.0-2 (2017-10-01)","title":"RMariaDB 1.0-2 (2017-10-01)","text":"Initial release, compliant DBI specification. Test almost test cases DBI specification. Fully support parametrized queries (#22, #27, #39). Queries supported prepared statement protocol still can run via dbExecute() dbSendStatement(), function mariadbExecQuery() removed (#28). Spec-compliant transactions (#38, #49). 64-bit integers now supported bit64 package. Unfortunately, also means numeric literals (SELECT 1) returned 64-bit integers (#12). Correct handling DATETIME TIME columns (#52, @noahwilliamsson). Support timestamp values sub-second precision output, year beyond 2038 (#56). connection now uses “utf8mb4” charset default (#7). New default row.names = FALSE. New SSL-related arguments dbConnect(): ssl.key, ssl.cert, ssl.ca, ssl.capath, ssl.cipher (#131, #148, @adamchainz). CI Linux, Windows, OS X (#25). Support Connector/C MariaDB MySQL.","code":""},{"path":"https://rmariadb.r-dbi.org/dev/news/index.html","id":"rmariadb-011-1-2016-03-24","dir":"Changelog","previous_headings":"","what":"RMariaDB 0.11-1 (2016-03-24)","title":"RMariaDB 0.11-1 (2016-03-24)","text":"RMariaDB fully supports DATE DATETIME columns. output, DATE columns converted vectors Dates DATETIME converted POSIXct. faciliate correct computation time zone, RMariaDB always sets session timezone UTC. RMariaDB rewritten (essentially scratch) C++ Rcpp. considerably reduced amount code, allow us take advantage sophisticated memory management tools available Rcpp. rewrite yield minor performance improvements, importantly protect memory leaks crashes. also provides better base future development. Support prepared queries: create prepared query dbSendQuery() bind values dbBind(). dbSendQuery() dbGetQuery() also support inline parameterised queries, like dbGetQuery(mariadbDefault(), \"SELECT * mtcars cyl = :cyl\",     params = list(cyl = 4)). performance benefits protects SQL injection attacks. dbListFields() removed. Please use dbColumnInfo() instead. dbGetInfo() removed. Please use individual metadata functions. Information formerly contain summary() methods now integrated show() methods. make.db.names() deprecated. Use dbQuoteIdentifier() instead. isIdCurrent() deprecated. Use dbIsValid() instead. dbApply(), dbMoreResults() dbNextResults() removed. always flagged experimental, now experiment . dbEscapeStrings() deprecated. Please use dbQuoteStrings() instead. dbObjectId compatibility shim removed Add SSL support Windows. Fix repetition strings subsequent rows (@peternowee, #125). Always set connection character set utf-8 Backport build system improvements stable branch Reenable Travis-CI, switch R Travis, collect coverage","code":""}]
